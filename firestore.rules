rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow create, write, read, delete, get, list, update: if false;
    }
    match /rounds/{roundId} {
      allow read, get, list;
    }
    match /pairs/{pairId} {
      allow read, get, list;
    }
    match /remote-config/{configId} {
      allow read, get, list;
    }
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow get: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['nickname']);
    }
    match /tracks/{trackId} {
      allow read, get, list;
      allow create: if request.auth != null &&
          get(/databases/(default)/documents/remote-config/main).data.isTracksUploadOpen == true &&
          get(/databases/(default)/documents/users/$(request.auth.uid)).data.canUploadTracks == true;
      allow update: if request.auth != null &&
          get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    match /tracks-counter/{trackCounterId} {
      allow read, get, list;
      allow create, update: if request.auth != null &&
          get(/databases/(default)/documents/remote-config/main).data.isTracksUploadOpen == true &&
          get(/databases/(default)/documents/users/$(request.auth.uid)).data.canUploadTracks == true;
    }
    match /lyrics/{lyricsId} {
      allow read, get, list;
      allow create: if request.auth != null &&
          get(/databases/(default)/documents/remote-config/main).data.isTracksUploadOpen == true &&
          get(/databases/(default)/documents/users/$(request.auth.uid)).data.canUploadTracks == true;
    }
  }
}
